generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["createMany"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  code  String @id
  //name_sv String
  //name_en String
  owner String
  name  String

  replaced_by Course[]         @relation("Replacements", references: [code])
  replaces    Course[]         @relation("Replacements", references: [code])
  instances   CourseInstance[]
  exams       Exam[]

  @@map("courses")
}

model CourseInstance {
  course_code     String
  course          Course @relation(fields: [course_code], references: [code])
  study_portal_id String

  academic_year String
  // Study period 0 is during the summer
  start_period  Int
  end_period    Int

  // examiner      String
  // course_page String
  // primary_exam
  // second_exam
  // third_exam

  survey Survey @relation(references: [academic_year, start_period, end_period], fields: [academic_year, start_period, end_period])
  @@id([academic_year, start_period, end_period])
  @@map("course_instances")
}

model Examiner {
  cid  String @id
  name String

  @@map("examiners")
}

model Exam {
  date   DateTime
  code   String
  failed Int
  three  Int
  four   Int
  five   Int
  course Course   @relation(references: [code], fields: [code])

  @@id([code, date])
  @@map("exams")
}

model Survey {
  academic_year String
  start_period  Int
  end_period    Int

  respondents      Decimal
  responses        Decimal
  answer_frequency Decimal

  prerequisite_mean          Decimal
  prerequisite_median        Decimal
  goals_mean                 Decimal
  goals_median               Decimal
  course_structure_mean      Decimal
  course_structure_median    Decimal
  course_teaching_mean       Decimal
  course_teaching_median     Decimal
  course_litterature_mean    Decimal
  course_litterature_median  Decimal
  examination_mean           Decimal
  examination_median         Decimal
  administration_mean        Decimal
  administration_median      Decimal
  workload_mean              Decimal
  workload_median            Decimal
  working_environment_mean   Decimal?
  working_environment_median Decimal?
  total_impression_mean      Decimal
  total_impression_median    Decimal

  CourseInstance CourseInstance[]

  @@id([academic_year, start_period, end_period])
  @@map("surveys")
}

model Department {
  // Official course portal id
  id      Int    @id
  name_sv String
  name_en String

  @@map("departments")
}

model Programme {
  // Official course portal id
  id      String @id
  code    String @unique
  name_sv String
  name_en String

  @@map("programmes")
}

model log {
  timestamp DateTime @id @default(now()) @db.Timestamptz(6)
  page      String
  event     String
  data      String
  cookie    String
  ip        String
}

model feedback {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now()) @db.Timestamptz(6)
  email     String
  message   String
}
